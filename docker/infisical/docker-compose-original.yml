version: '3.8'

services:
  infisical-postgres:
    image: postgres:15-alpine
    container_name: infisical-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - infisical-postgres-data:/var/lib/postgresql/data
    networks:
      - infisical-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  infisical-redis:
    image: redis:7-alpine
    container_name: infisical-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - infisical-redis-data:/data
    networks:
      - infisical-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  infisical:
    image: infisical/infisical:${INFISICAL_VERSION}
    container_name: infisical
    depends_on:
      infisical-postgres:
        condition: service_healthy
      infisical-redis:
        condition: service_healthy
    ports:
      - "${INFISICAL_PORT}:8080"
    environment:
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@infisical-postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@infisical-redis:6379
      ENCRYPTION_KEY: ${INFISICAL_ENCRYPTION_KEY}
      JWT_SECRET: ${INFISICAL_JWT_SECRET}
      TELEMETRY_ENABLED: ${INFISICAL_TELEMETRY_ENABLED}
      NODE_ENV: production
    networks:
      - infisical-network
      - dean-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  infisical-postgres-data:
  infisical-redis-data:

networks:
  infisical-network:
    driver: bridge
  dean-network:
    external: true