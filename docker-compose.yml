version: "3.8"

services:
  # Apache Airflow Webserver
  airflow-webserver:
    user: "${AIRFLOW_UID:-50000}:0"
    build:
      context: ../airflow-hub
      dockerfile: docker/Dockerfile.airflow
    container_name: airflow-webserver
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://dean_user:dean_password_2024@dean-postgres:5432/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    env_file:
      - .env
    volumes:
      - ../airflow-hub/dags:/opt/airflow/dags
      - ../airflow-hub/plugins:/opt/airflow/plugins
      - ../airflow-hub/logs:/opt/airflow/logs
      - ./modules/agent-evolution:/opt/agent-evolution
    depends_on:
      dean-postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      bash -c "
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@dean.ai \
          --password admin &&
        airflow webserver
      "

  # Claude Code CLI Service
  dean-cli:
    image: anthropic/claude-code-cli:latest
    container_name: dean-cli
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./repos:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      - ./evidence:/evidence
    networks:
      - dean-network
    restart: unless-stopped
    command: tail -f /dev/null  # Keep container running

  # Apache Airflow Scheduler
  airflow-scheduler:
    user: "${AIRFLOW_UID:-50000}:0"
    build:
      context: ../airflow-hub
      dockerfile: docker/Dockerfile.airflow
    container_name: airflow-scheduler
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://dean_user:dean_password_2024@dean-postgres:5432/airflow
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    env_file:
      - .env
    volumes:
      - ../airflow-hub/dags:/opt/airflow/dags
      - ../airflow-hub/plugins:/opt/airflow/plugins
      - ../airflow-hub/logs:/opt/airflow/logs
      - ./modules/agent-evolution:/opt/agent-evolution
    depends_on:
      dean-postgres:
        condition: service_healthy
    restart: unless-stopped
    command: airflow scheduler

  # IndexAgent API Service (Port 8081)
  indexagent:
    build:
      context: ../IndexAgent
      dockerfile: Dockerfile
    container_name: indexagent
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://dean_user:dean_password_2024@dean-postgres:5432/indexagent
      - REDIS_URL=redis://dean-redis:6380
      - REDIS_PASSWORD=dean_agent_registry_2024
      - VAULT_URL=http://dean-vault:8200
      - VAULT_TOKEN=dean_vault_token_2024
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - /Users/preston/repos:/repos
      - ../IndexAgent/reports:/app/reports
      - ../IndexAgent/docs/auto:/app/docs/auto
      - /tmp/worktrees:/tmp/worktrees
    depends_on:
      dean-postgres:
        condition: service_healthy
      dean-redis:
        condition: service_healthy
      dean-vault:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  zoekt-indexserver:
    image: sourcegraph/zoekt-indexserver:latest
    container_name: zoekt-indexserver
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "${ZOEKT_UI_PORT}:6070"
    volumes:
      - /Users/preston/repos:/repos
    restart: unless-stopped

  sourcebot:
    image: ghcr.io/sourcebot-dev/sourcebot:latest
    container_name: sourcebot
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "${SOURCEBOT_UI_PORT}:3000"
    volumes:
      - /Users/preston/repos:/repos
    restart: unless-stopped

  # DEAN System Services - Three Service Architecture
  
  # PostgreSQL Database with complete schema
  dean-postgres:
    image: postgres:15-alpine
    container_name: dean-postgres
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    environment:
      POSTGRES_DB: "dean_system"
      POSTGRES_USER: "dean_user"
      POSTGRES_PASSWORD: "dean_password_2024"
      # Create multiple databases
      POSTGRES_MULTIPLE_DATABASES: "airflow,indexagent,market_analysis,agent_evolution"
    ports:
      - "5432:5432"
    volumes:
      - dean_postgres_data:/var/lib/postgresql/data
      - ./modules/agent-evolution/scripts/complete_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./scripts/create_databases.sql:/docker-entrypoint-initdb.d/00-databases.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dean_user -d dean_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Agent Registry (Port 6380)
  dean-redis:
    image: redis:7-alpine
    container_name: dean-redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./modules/agent-evolution/config/redis.conf:/usr/local/etc/redis/redis.conf
      - dean_redis_data:/data
    ports:
      - "6380:6380"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # HashiCorp Vault for secrets
  dean-vault:
    image: hashicorp/vault:1.15
    container_name: dean-vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dean_vault_token_2024
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Evolution API Service (Port 8090)
  dean-evolution-api:
    build:
      context: ./modules/agent-evolution
      dockerfile: Dockerfile
    container_name: dean-evolution-api
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "8090:8090"
    environment:
      - DATABASE_URL=postgresql://dean_user:dean_password_2024@dean-postgres:5432/agent_evolution
      - REDIS_URL=redis://dean-redis:6380
      - REDIS_PASSWORD=dean_agent_registry_2024
      - INDEXAGENT_API_URL=http://indexagent:8081
      - VAULT_URL=http://dean-vault:8200
      - VAULT_TOKEN=dean_vault_token_2024
      - DEAN_LOG_LEVEL=${DEAN_LOG_LEVEL:-INFO}
      - DEAN_TOKEN_BUDGET_DEFAULT=${DEAN_TOKEN_BUDGET_DEFAULT:-1000}
      - DEAN_MAX_AGENTS=${DEAN_MAX_AGENTS:-100}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    env_file:
      - .env
    volumes:
      - ./modules/agent-evolution/data:/app/data
      - ./modules/agent-evolution/logs:/app/logs
      - ./modules/agent-evolution/config:/app/config
      - /tmp/dean-worktrees:/app/tmp
    depends_on:
      dean-postgres:
        condition: service_healthy
      dean-redis:
        condition: service_healthy
      dean-vault:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent Evolution Service with Phase 2 Components (Port 8091)
  agent-evolution:
    build:
      context: ./modules/agent-evolution
      dockerfile: Dockerfile
    container_name: agent-evolution
    platform: "${DOCKER_DEFAULT_PLATFORM}"
    ports:
      - "8091:8091"  # WebSocket control interface
      - "8092:8092"  # Web UI
    environment:
      - PYTHONPATH=/app:$PYTHONPATH
      - DEAN_MODULE_PATH=/app
      - DATABASE_URL=postgresql://dean_user:dean_password_2024@dean-postgres:5432/agent_evolution
      - REDIS_URL=redis://dean-redis:6380
      - REDIS_PASSWORD=dean_agent_registry_2024
      - INDEXAGENT_URL=http://indexagent:8081
      - AIRFLOW_URL=http://airflow-webserver:8080
      - VAULT_URL=http://dean-vault:8200
      - VAULT_TOKEN=dean_vault_token_2024
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - TOKEN_LIMIT_PER_AGENT=${AGENT_TOKEN_LIMIT:-4096}
      - AGENT_MAX_CPU=${AGENT_MAX_CPU:-2.0}
      - AGENT_MAX_MEMORY=${AGENT_MAX_MEMORY:-2Gi}
    env_file:
      - .env
    volumes:
      - ./modules/agent-evolution/data:/app/data
      - ./modules/agent-evolution/logs:/app/logs
      - ./modules/agent-evolution/config:/app/config
      - ./modules/agent-evolution/static:/app/static
      - agent-models:/app/models
      - /var/run/docker.sock:/var/run/docker.sock  # For Claude CLI integration
      - ../repos:/repos:ro  # Read-only access to repositories
      - ./worktrees:/worktrees:rw  # Read-write for agent worktrees
    networks:
      - dean-network
    depends_on:
      dean-postgres:
        condition: service_healthy
      dean-redis:
        condition: service_healthy
      dean-vault:
        condition: service_healthy
      indexagent:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["python", "-m", "src.web.control_interface"]

volumes:
  dean_postgres_data:
  dean_redis_data:
  agent-models:

networks:
  dean-network:
    driver: bridge

# Optional: secrets and additional config can be added here