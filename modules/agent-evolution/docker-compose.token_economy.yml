version: '3.8'

services:
  token-economy:
    build:
      context: .
      dockerfile: services/Dockerfile.token_economy
    container_name: dean-token-economy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/agent_evolution
      - REDIS_URL=redis://redis:6379/0
      - GLOBAL_TOKEN_BUDGET=${GLOBAL_TOKEN_BUDGET:-100000}
      - PYTHONUNBUFFERED=1
    ports:
      - "${TOKEN_ECONOMY_PORT:-8091}:8091"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - agent-network
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1G'
        reservations:
          cpus: '0.5'
          memory: '512M'

  # Required services if not already running
  postgres:
    image: postgres:15-alpine
    container_name: dean-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=agent_evolution
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/complete_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - agent-network

  redis:
    image: redis:7-alpine
    container_name: dean-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - agent-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: dean-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    restart: unless-stopped
    networks:
      - agent-network

volumes:
  postgres-data:
  redis-data:
  prometheus-data:

networks:
  agent-network:
    driver: bridge