version: '3.8'

# DEAN System Docker Compose Configuration
# REAL IMPLEMENTATION - NO MOCKS

services:
  # PostgreSQL Database with agent_evolution schema
  postgres:
    image: postgres:15-alpine
    container_name: dean-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agent_evolution
    ports:
      - "5432:5432"
    volumes:
      - dean-postgres-data:/var/lib/postgresql/data
      - ./database/init_agent_evolution.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d agent_evolution"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dean-network

  # Redis for caching and agent registry
  redis:
    image: redis:7-alpine
    container_name: dean-redis
    ports:
      - "6379:6379"
    volumes:
      - dean-redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dean-network

  # DEAN API Service (Real Implementation)
  dean-api:
    build:
      context: ./services/dean_api
      dockerfile: Dockerfile
    container_name: dean-api
    environment:
      DATABASE_URL: postgresql://dean_api:dean_api_password@postgres:5432/agent_evolution
      REDIS_URL: redis://redis:6379
      WORKTREE_BASE_PATH: /app/worktrees
      GLOBAL_TOKEN_BUDGET: "1000000"
      MIN_DIVERSITY_THRESHOLD: "0.3"
      PYTHONPATH: /app:/app/IndexAgent
    ports:
      - "8091:8091"
    volumes:
      - dean-worktrees:/app/worktrees
      - dean-patterns:/app/patterns
      - ../../IndexAgent:/app/IndexAgent:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dean-network

  # Apache Airflow for workflow orchestration
  airflow-webserver:
    image: apache/airflow:2.8.0
    container_name: dean-airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'jYxpwlwAXRNueOR-dtjsCeq6S2lcD7jok2bekLHPcVw='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      DEAN_API_URL: http://dean-api:8091/api/v1
    volumes:
      - ../../airflow-hub/dags:/opt/airflow/dags
      - ../../airflow-hub/logs:/opt/airflow/logs
      - ../../airflow-hub/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      postgres:
        condition: service_healthy
      dean-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - dean-network

  airflow-scheduler:
    image: apache/airflow:2.8.0
    container_name: dean-airflow-scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'jYxpwlwAXRNueOR-dtjsCeq6S2lcD7jok2bekLHPcVw='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      DEAN_API_URL: http://dean-api:8091/api/v1
    volumes:
      - ../../airflow-hub/dags:/opt/airflow/dags
      - ../../airflow-hub/logs:/opt/airflow/logs
      - ../../airflow-hub/plugins:/opt/airflow/plugins
    command: scheduler
    depends_on:
      postgres:
        condition: service_healthy
      dean-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname \"$${HOSTNAME}\""]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - dean-network

  airflow-init:
    image: apache/airflow:2.8.0
    container_name: dean-airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: 'jYxpwlwAXRNueOR-dtjsCeq6S2lcD7jok2bekLHPcVw='
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: 'admin'
      _AIRFLOW_WWW_USER_PASSWORD: 'admin'
    volumes:
      - ../../airflow-hub/dags:/opt/airflow/dags
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow db upgrade &&
        airflow users create --username admin --firstname DEAN --lastname System --role Admin --email dean@example.com --password admin &&
        airflow connections add dean_api --conn-type http --conn-host dean-api --conn-port 8091 || true &&
        airflow connections add dean_postgres --conn-type postgres --conn-host postgres --conn-port 5432 --conn-schema agent_evolution --conn-login dean_api --conn-password dean_api_password || true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dean-network

  # DEAN Dashboard (Real Implementation - NO MOCKS)
  dean-dashboard:
    image: nginx:alpine
    container_name: dean-dashboard
    volumes:
      - ../dean_dashboard_real.html:/usr/share/nginx/html/index.html:ro
      - ./nginx/dean-dashboard.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8092:80"
    depends_on:
      - dean-api
    networks:
      - dean-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: dean-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - dean-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - dean-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: dean-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - dean-grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - dean-network

volumes:
  dean-postgres-data:
  dean-redis-data:
  dean-worktrees:
  dean-patterns:
  dean-prometheus-data:
  dean-grafana-data:

networks:
  dean-network:
    driver: bridge